{"version":3,"sources":["components/Header/Header.module.css","components/cards/cardsReducer.tsx","components/Header/Header.tsx","components/assets/obl.jpg","components/FrontCard.tsx","components/assets/tuz.jpg","components/BackCard.tsx","components/Start/Start.tsx","components/cards/fabricCards.ts","App.tsx","reportWebVitals.ts","redux/store.tsx","index.tsx","components/Start/Start.module.css"],"names":["module","exports","ACTION_TYPE","SCREEN_START","SCREEN_GAME","initialState","cards","delay","isRunning","openCards","screen","time","totalClicks","totalPairs","openCard","card","open","type","OPEN_CARDS","Header","props","startGame","className","s","button","onClick","style","display","justifyContent","alignItems","marginTop","marginBottom","color","marginRight","flexDirection","FrontCard","name","src","obl","alt","width","BackCard","tuz","Start","cardsPage","useSelector","state","dispatch","useDispatch","useEffect","length","RESET_OPEN_CARDS","SET_WITH_PAIR","console","log","initGame","action","SET_CARDS","setCards","count","arr","i","push","id","v1","withPair","concat","map","el","sort","Math","random","fabricCards","container","START_GAME","setStartGame","wrapperCards","index","isFlipped","flipDirection","disabled","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0FACAA,EAAOC,QAAU,CAAC,OAAS,yB,qFCCfC,E,8EAAAA,K,mCAAAA,E,qCAAAA,E,qCAAAA,E,2CAAAA,E,kDAAAA,M,KASL,IAEMC,EAAe,eAEfC,EAAc,cAoBrBC,EAAiC,CACnCC,MAAO,GACPC,MAAO,IACPC,WAAW,EACXC,UAAW,GACXC,OAAQP,EACRQ,KA7B0B,IA8B1BC,YAAa,EACbC,WAAY,GA8FHC,EAAW,SAACC,EAAiBC,GACtC,MAAO,CACHC,KAAMf,EAAYgB,WAClBH,OACAC,S,wBCnIKG,EAAS,SAACC,GAAuB,IAAD,EAQrCA,EALAV,cAHqC,MAG5BP,EAH4B,KAQrCiB,EAJAT,KAIAS,EAHAR,oBALqC,MAKvB,EALuB,IAQrCQ,EAFAP,kBANqC,MAMxB,EANwB,EAOrCQ,EACAD,EADAC,UAYJ,OACI,gCACKX,IAAWP,EACR,wBACImB,UAAWC,IAAEC,OACbC,QAASJ,EAFb,4BDlBU,eCqBRX,EACE,8BACI,8CAGJ,sBAAKgB,MAnBF,CACfC,QAAS,OACTC,eAAgB,SAChBC,WAAW,SACXC,UAAW,QACXC,aAAc,QACdC,MAAM,SAaM,UACI,qBAAKN,MAAO,CAACO,YAAY,QAAzB,kBACA,sBAAKP,MAAO,CAACC,QAAS,OAAQO,cAAe,SAAUL,WAAY,UAAnE,UAEI,gDAAkB,+BAAOjB,OACzB,gDAAkB,+BAAOC,aAIzC,4B,iCCjDG,MAA0B,gCCS5BsB,EAAY,SAACf,GAA0B,IAG5CgB,EACAhB,EADAgB,KAEJ,OACI,sBAAKV,MAAO,CAACC,QAAQ,OAAOO,cAAc,SAASL,WAAW,UAA9D,UACI,8BAAMO,IACN,qBAAKC,IAAKC,EAAKC,IAAI,GAAGb,MAAO,CAACc,MAAM,cCjBjC,MAA0B,gCCO5BC,EAAW,SAACrB,GAAuB,IAExCgB,EACDhB,EADCgB,KAGJ,OACI,sBAAKV,MAAO,CAACC,QAAQ,OAAOO,cAAc,SAASL,WAAW,UAA9D,UACI,8BAAMO,IACN,qBAAKC,IAAKK,EAAKH,IAAI,GAAGb,MAAO,CAACc,MAAM,c,QCKnCG,EAAQ,WAGjB,IAAMC,EAAYC,aAAY,SAACC,GAAD,OAAyBA,EAAMF,aAEzDtC,EAQAsC,EARAtC,MAGAG,GAKAmC,EAPArC,MAOAqC,EANApC,UAMAoC,EALAnC,WACAC,EAIAkC,EAJAlC,OACAC,EAGAiC,EAHAjC,KACAC,EAEAgC,EAFAhC,YACAC,EACA+B,EADA/B,WAEEkC,EAAWC,cAEjBC,qBAAU,WAAM,IAAD,IAKkC,ENuGzBb,GM3GjB3B,EAAUyC,OAAS,IAClBH,ENiHD,CACH9B,KAAMf,EAAYiD,mBMjHdJ,EAASjC,EAASL,EAAU,IAAI,MAEjC,UAAAA,EAAU,UAAV,eAAc2B,SAAd,UAAuB3B,EAAU,UAAjC,aAAuB,EAAc2B,QACpCW,GNsGgBX,EMtGI,UAAC3B,EAAU,UAAX,aAAC,EAAc2B,KNuGpC,CACHnB,KAAMf,EAAYkD,cAClBhB,UMvGAiB,QAAQC,IAAI7C,KACd,CAACA,EAAUyC,SAEbD,qBAAU,WACFvC,IAAWN,GACXmD,MAEL,CAAC7C,IAEJ,IAAM6C,EAAW,WACb,IAAMC,ENsEU,SAAClD,GACrB,MAAO,CACHW,KAAMf,EAAYuD,UAClBnD,SMzEeoD,CCpDI,SAACC,GAGxB,IADA,IAAIC,EAAM,GACDC,EAAI,EAAGA,EAAIF,EAAOE,IACvBD,EAAIE,KAAK,CACLC,GAAIC,cACJ5B,KAAK,QAAD,OAAUyB,GACd7C,MAAM,EACNiD,UAAU,IAIlB,OADAL,EAAMA,EAAIM,OAAON,EAAIO,KAAI,SAACC,GAAD,mBAAC,eAAWA,GAAZ,IAAeL,GAAGC,qBAChCK,MAAK,kBAAKC,KAAKC,SAAW,MDwCTC,CN3CL,IM4CnBzB,EAASS,IAYb,OACI,qBAAKlC,UAAWC,IAAEkD,UAAlB,SACI,gCACI,cAAC,EAAD,CACIpD,UAbE,WACd,IAAMmC,ENwEc,SAAC9C,GACzB,MAAO,CACHO,KAAMf,EAAYwE,WAClBhE,UM3EeiE,CAAavE,GAC5B2C,EAASS,IAYG9C,OAAQA,EACRC,KAAMA,EACNC,YAAaA,EACbC,WAAYA,IAEhB,qBAAKS,UAAWC,IAAEqD,aAAlB,SACKtE,EAAM6D,KAAI,SAACC,EAAIS,GASZ,OACI,qBAAKvD,UAAWC,IAAEkD,UAAlB,SACI,eAAC,IAAD,CAA2BK,UAAWV,EAAGpD,KAAM+D,cAAc,WAA7D,UACI,gCACI,cAAC,EAAD,CACI3C,KAAMgC,EAAGhC,OAEb,wBAAQX,QAdA,WACpBsB,EAASjC,EAASsD,GAAI,KAaV,6BAEJ,gCACI,cAAC,EAAD,CACIhC,KAAMgC,EAAGhC,OAEb,wBACI4C,SAAUZ,EAAGH,SAAUxC,QAlBlB,WACrBsB,EAASjC,EAASsD,GAAI,KAgBV,gCAXYA,EAAGL,iBE1ExCkB,MAXf,WAIE,OACE,qBAAK3D,UAAU,MAAf,SACE,cAAC,EAAD,OCIS4D,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCLRQ,EAAcC,YAAgB,CAChChD,UVkDwB,WAAoF,IAAnFE,EAAkF,uDAAxDzC,EAAcmD,EAA0C,uCAC3G,OAAQA,EAAOvC,MACX,KAAKf,EAAYuD,UACb,OAAO,2BACAX,GADP,IAEIlC,YAAa,EACbC,WAAY,EACZP,MAAOkD,EAAOlD,QAEtB,KAAKJ,EAAYwE,WACb,OAAO,2BAAI5B,GAAX,IAAkBpC,OAAQ8C,EAAO9C,SACrC,KAAKR,EAAYgB,WACb,OAAO,2BACA4B,GADP,IAEIrC,UAAY,WACR,GAAG+C,EAAOxC,KACN,OAAG8B,EAAMrC,UAAU,IAAMqC,EAAMrC,UAAU,GAAGsD,KAAOP,EAAOzC,KAAKgD,GACpDjB,EAAMrC,UAEX,GAAN,mBAAYqC,EAAMrC,WAAlB,CAA6B+C,EAAOzC,OAEvB,IAAD,EAAhB,IAAIyC,EAAOxC,OACJ,UAAA8B,EAAMrC,UAAU,UAAhB,eAAoBsD,MAAOP,EAAOzC,KAAKgD,GACtC,MAAO,GAGf,OAAQjB,EAAMrC,UAZN,GAcZH,MAAOwC,EAAMxC,MAAM6D,KAAI,SAACC,GACpB,OAAIA,EAAGL,KAAOP,EAAOzC,KAAKgD,GACf,2BAAIK,GAAX,IAAepD,KAAMwC,EAAOxC,OAEzBoD,KAEXxD,YAAakC,EAAMlC,YAAc,IAEzC,KAAKV,EAAYkD,cACb,OAAO,2BACAN,GADP,IAEIrC,UAAW,GACXH,MAAOwC,EAAMxC,MAAM6D,KAAI,SAACC,GACpB,OAAIA,EAAGhC,OAASoB,EAAOpB,KACZ,2BAAIgC,GAAX,IAAeH,UAAU,IAEtBG,KAEXvD,WAAYiC,EAAMjC,WAAa,IAGvC,KAAKX,EAAYiD,iBACb,OAAO,2BACAL,GADP,IAEIrC,UAAW,GACXH,MAAOwC,EAAMxC,MAAM6D,KAAI,SAACC,GACpB,OAAIA,EAAGH,SACIG,EAEPA,EAAGpD,KACI,2BAAIoD,GAAX,IAAepD,MAAM,IAElBoD,OAGnB,QACI,OAAOtB,MU/GN+C,EAAQC,YAAYH,GCAjCI,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACI,cAAC,EAAD,QAGRK,SAASC,eAAe,SAM5BjB,K,kBCnBAlF,EAAOC,QAAU,CAAC,UAAY,yBAAyB,aAAe,+B","file":"static/js/main.f0673ced.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Header_button__2v_O-\"};","import {v1} from \"uuid\";\r\n\r\nexport enum ACTION_TYPE {\r\n    SET_CARDS = 'cardsReducer/SET_CARDS',\r\n    START_GAME = 'cardsReducer/START_GAME',\r\n    OPEN_CARDS = 'cardsReducer/OPEN_CARDS',\r\n    SET_WITH_PAIR = 'cardsReducer/SET_WITH_PAIR',\r\n    RESET_OPEN_CARDS = 'cardsReducer/RESET_OPEN_CARDS',\r\n}\r\n\r\n// export const PAIRS_COUNT = 18;\r\nexport const PAIRS_COUNT = 9;\r\nexport const TIME_TO_CHOICE = 5000;\r\nexport const SCREEN_START = 'SCREEN_START';\r\nexport const SCREEN_END = 'SCREEN_END';\r\nexport const SCREEN_GAME = 'SCREEN_GAME';\r\n\r\nexport type CardsType = {\r\n    id: string,\r\n    name: string,\r\n    open: boolean,\r\n    withPair: boolean\r\n}\r\n\r\n\r\ntype InitialStateType = {\r\n    cards: Array<CardsType>,\r\n    delay: number,\r\n    isRunning: boolean,\r\n    openCards: Array<CardsType>,\r\n    screen: string,\r\n    time: number,\r\n    totalClicks: number,\r\n    totalPairs: number,\r\n}\r\nconst initialState: InitialStateType = {\r\n    cards: [],\r\n    delay: 1000,\r\n    isRunning: false,\r\n    openCards: [],\r\n    screen: SCREEN_START,\r\n    time: TIME_TO_CHOICE,\r\n    totalClicks: 0,\r\n    totalPairs: 0,\r\n};\r\n\r\n\r\ntype ActionTypes =\r\n    ReturnType<typeof setCards>\r\n    | ReturnType<typeof setStartGame>\r\n    | ReturnType<typeof openCard>\r\n    | ReturnType<typeof setWithPair>\r\n    | ReturnType<typeof resetOpenCards>\r\n\r\n\r\nexport const cardsReducer = (state: InitialStateType = initialState, action: ActionTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case ACTION_TYPE.SET_CARDS:\r\n            return {\r\n                ...state,\r\n                totalClicks: 0,\r\n                totalPairs: 0,\r\n                cards: action.cards\r\n            };\r\n        case ACTION_TYPE.START_GAME:\r\n            return {...state, screen: action.screen};\r\n        case ACTION_TYPE.OPEN_CARDS:\r\n            return {\r\n                ...state,\r\n                openCards: (() => {\r\n                    if(action.open){\r\n                        if(state.openCards[0] && state.openCards[0].id === action.card.id){\r\n                            return state.openCards;\r\n                        }\r\n                        return [... state.openCards, action.card]\r\n                    }\r\n                    if(!action.open){\r\n                        if(state.openCards[0]?.id === action.card.id){\r\n                            return [];\r\n                        }\r\n                    }\r\n                    return  state.openCards\r\n                })(),\r\n                cards: state.cards.map((el) => {\r\n                    if (el.id === action.card.id) {\r\n                        return {...el, open: action.open}\r\n                    }\r\n                    return el\r\n                }),\r\n                totalClicks: state.totalClicks + 1\r\n            }\r\n        case ACTION_TYPE.SET_WITH_PAIR:\r\n            return {\r\n                ...state,\r\n                openCards: [],\r\n                cards: state.cards.map((el) => {\r\n                    if (el.name === action.name) {\r\n                        return {...el, withPair: true}\r\n                    }\r\n                    return el\r\n                }),\r\n                totalPairs: state.totalPairs + 1,\r\n\r\n            }\r\n        case ACTION_TYPE.RESET_OPEN_CARDS:\r\n            return {\r\n                ...state,\r\n                openCards: [],\r\n                cards: state.cards.map((el) => {\r\n                    if (el.withPair) {\r\n                        return el\r\n                    }\r\n                    if (el.open) {\r\n                        return {...el, open: false}\r\n                    }\r\n                    return el\r\n                })\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const setCards = (cards: Array<CardsType>) => {\r\n    return {\r\n        type: ACTION_TYPE.SET_CARDS,\r\n        cards\r\n    } as const\r\n}\r\n\r\nexport const setStartGame = (screen: string) => {\r\n    return {\r\n        type: ACTION_TYPE.START_GAME,\r\n        screen\r\n    } as const\r\n}\r\nexport const openCard = (card: CardsType, open: boolean) => {\r\n    return {\r\n        type: ACTION_TYPE.OPEN_CARDS,\r\n        card,\r\n        open\r\n    } as const\r\n}\r\nexport const setWithPair = (name: string) => {\r\n    return {\r\n        type: ACTION_TYPE.SET_WITH_PAIR,\r\n        name\r\n    } as const\r\n}\r\nexport const resetOpenCards = () => {\r\n    return {\r\n        type: ACTION_TYPE.RESET_OPEN_CARDS,\r\n    } as const\r\n}\r\n","import {CardsType, SCREEN_END, SCREEN_START} from \"../cards/cardsReducer\";\r\nimport s from './Header.module.css'\r\n\r\ntype HeaderType = {\r\n    screen: string,\r\n    time: number,\r\n    totalClicks: number,\r\n    totalPairs: number,\r\n    startGame: () => void,\r\n}\r\nexport const Header = (props: HeaderType) => {\r\n\r\n    const {\r\n        screen = SCREEN_START,\r\n        time = 0,\r\n        totalClicks = 0,\r\n        totalPairs = 0,\r\n        startGame,\r\n    } = props\r\n\r\n\r\n    const styleCount = {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems:'center',\r\n        marginTop: '100px',\r\n        marginBottom: '100px',\r\n        color:'white'\r\n    }\r\n    return (\r\n        <div>\r\n            {screen === SCREEN_START ?\r\n                <button\r\n                    className={s.button}\r\n                    onClick={startGame}>Click to start</button>\r\n                : screen === SCREEN_END ?\r\n                    <div>\r\n                        <div>well down</div>\r\n                    </div>\r\n                    :\r\n                    <div style={styleCount }>\r\n                        <div style={{marginRight:'50px'} }>Time</div>\r\n                        <div style={{display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\r\n\r\n                            <div>TOTAL MOVES: <span>{totalClicks}</span></div>\r\n                            <div>FOUND PAIRS: <span>{totalPairs}</span></div>\r\n                        </div>\r\n                    </div>\r\n            }\r\n            <div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/obl.cc8e49c0.jpg\";","import tuz from './assets/tuz.jpg'\r\nimport obl from './assets/obl.jpg'\r\n\r\ntype FrontCardType = {\r\n    name: string\r\n}\r\n\r\n\r\n\r\nexport const FrontCard = (props: FrontCardType) => {\r\n\r\n    const {\r\n        name\r\n    } = props\r\n    return (\r\n        <div style={{display:\"flex\",flexDirection:'column',alignItems:'center'}}>\r\n            <div>{name}</div>\r\n            <img src={obl} alt=\"\" style={{width:'50px'}}/>\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/tuz.051ec6cd.jpg\";","import tuz from './assets/tuz.jpg'\r\n\r\ntype BackCardType = {\r\n    name:string\r\n}\r\n\r\n\r\nexport const BackCard = (props:BackCardType)=> {\r\n    const {\r\n        name\r\n    }= props\r\n\r\n    return (\r\n        <div style={{display:\"flex\",flexDirection:'column',alignItems:'center'}}>\r\n            <div>{name}</div>\r\n            <img src={tuz} alt=\"\" style={{width:'50px'}}/>\r\n        </div>\r\n    )\r\n}","import {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/store\";\r\nimport {\r\n    openCard,\r\n    PAIRS_COUNT,\r\n    resetOpenCards,\r\n    SCREEN_GAME,\r\n    setCards,\r\n    setStartGame,\r\n    setWithPair\r\n} from \"../cards/cardsReducer\";\r\nimport {Header} from \"../Header/Header\";\r\nimport {useEffect} from \"react\";\r\nimport s from './Start.module.css'\r\nimport ReactCardFlip from \"react-card-flip\";\r\nimport {FrontCard} from \"../FrontCard\";\r\nimport {BackCard} from \"../BackCard\";\r\n\r\nimport {fabricCards} from \"../cards/fabricCards\";\r\n\r\nexport const Start = () => {\r\n\r\n\r\n    const cardsPage = useSelector((state: AppStateType) => state.cardsPage)\r\n    const {\r\n        cards,\r\n        delay,\r\n        isRunning,\r\n        openCards,\r\n        screen,\r\n        time,\r\n        totalClicks,\r\n        totalPairs\r\n    } = cardsPage\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(()=> {\r\n        if(openCards.length > 2){\r\n            dispatch(resetOpenCards())\r\n            dispatch(openCard(openCards[2], true))\r\n        }\r\n        if(openCards[0]?.name === openCards[1]?.name){\r\n            dispatch(setWithPair(openCards[0]?.name))\r\n        }\r\n        console.log(openCards)\r\n    },[openCards.length])\r\n\r\n    useEffect(() => {\r\n        if (screen === SCREEN_GAME) {\r\n            initGame()\r\n        }\r\n    }, [screen])\r\n\r\n    const initGame = () => {\r\n        const action = setCards(fabricCards(PAIRS_COUNT))\r\n        dispatch(action)\r\n    }\r\n\r\n    const startGame = () => {\r\n        const action = setStartGame(SCREEN_GAME)\r\n        dispatch(action);\r\n    };\r\n\r\n    const styleButton = {\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={s.container}>\r\n            <div>\r\n                <Header\r\n                    startGame={startGame}\r\n                    screen={screen}\r\n                    time={time}\r\n                    totalClicks={totalClicks}\r\n                    totalPairs={totalPairs}\r\n                />\r\n                <div className={s.wrapperCards}>\r\n                    {cards.map((el, index) => {\r\n\r\n                        const handleOpenClick = () => {\r\n                            dispatch(openCard(el, true))\r\n                        }\r\n                        const handleCloseClick = () => {\r\n                            dispatch(openCard(el, false))\r\n                        }\r\n\r\n                        return (\r\n                            <div className={s.container}>\r\n                                <ReactCardFlip key={el.id} isFlipped={el.open} flipDirection=\"vertical\">\r\n                                    <div>\r\n                                        <BackCard\r\n                                            name={el.name}\r\n                                        />\r\n                                        <button onClick={handleOpenClick}>Back to flip</button>\r\n                                    </div>\r\n                                    <div>\r\n                                        <FrontCard\r\n                                            name={el.name}\r\n                                        />\r\n                                        <button\r\n                                            disabled={el.withPair} onClick={handleCloseClick}\r\n                                        >Front to flip</button>\r\n                                    </div>\r\n                                </ReactCardFlip>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {v1} from \"uuid\";\r\n\r\nexport const fabricCards = (count: number) => {\r\n\r\n    let arr = []\r\n    for (let i = 0; i < count; i++) {\r\n        arr.push({\r\n            id: v1(),\r\n            name: `card_${i}`,\r\n            open: false,\r\n            withPair: false\r\n        })\r\n    }\r\n    arr = arr.concat(arr.map((el)=> ({...el,id:v1()})))\r\n    return arr.sort(()=> Math.random() - 0.5)\r\n}","import React from 'react';\nimport './App.css';\nimport {Start} from \"./components/Start/Start\";\n\nfunction App() {\n\n\n\n  return (\n    <div className=\"App\">\n      <Start/>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {combineReducers, createStore} from \"redux\";\r\nimport {cardsReducer} from \"../components/cards/cardsReducer\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    cardsPage: cardsReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer)\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./redux/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Start_container__2JaU7\",\"wrapperCards\":\"Start_wrapperCards__3REYt\"};"],"sourceRoot":""}